{"version":3,"file":"index.umd.min.js","sources":["../../../node_modules/.pnpm/node_modules/tslib/tslib.es6.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec3.js","../../../node_modules/.pnpm/@antv+util@3.3.4/node_modules/@antv/util/esm/lodash/is-nil.js","../../../node_modules/.pnpm/@antv+util@3.3.4/node_modules/@antv/util/esm/lodash/is-type.js","../src/CanvasRendererPlugin.ts","../src/shapes/styles/Default.ts","../src/shapes/styles/Image.ts","../../../node_modules/.pnpm/@antv+util@3.3.4/node_modules/@antv/util/esm/lodash/is-string.js","../src/shapes/styles/Text.ts","../src/shapes/styles/Rect.ts","../src/shapes/styles/Circle.ts","../src/shapes/styles/Ellipse.ts","../src/shapes/styles/Line.ts","../src/shapes/styles/Polyline.ts","../src/shapes/styles/Polygon.ts","../src/shapes/styles/Path.ts","../src/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","// isFinite,\nvar isNil = function (value) {\n    /**\n     * isNil(null) => true\n     * isNil() => true\n     */\n    return value === null || value === undefined;\n};\nexport default isNil;\n//# sourceMappingURL=is-nil.js.map","var toString = {}.toString;\nvar isType = function (value, type) { return toString.call(value) === '[object ' + type + ']'; };\nexport default isType;\n//# sourceMappingURL=is-type.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { AABB, CanvasEvent, CustomEvent, ElementEvent, Shape, Node, } from '@antv/g-lite';\nimport { isNil } from '@antv/util';\nimport { mat4, vec3 } from 'gl-matrix';\n/**\n * support 2 modes in rendering:\n * * immediate\n * * delayed: render at the end of frame with dirty-rectangle\n */\nvar CanvasRendererPlugin = /** @class */ (function () {\n    function CanvasRendererPlugin(canvasRendererPluginOptions) {\n        this.canvasRendererPluginOptions = canvasRendererPluginOptions;\n        this.removedRBushNodeAABBs = [];\n        this.renderQueue = [];\n        /**\n         * This stack is only used by clipPath for now.\n         */\n        this.restoreStack = [];\n        this.clearFullScreen = false;\n        /**\n         * view projection matrix\n         */\n        this.vpMatrix = mat4.create();\n        this.dprMatrix = mat4.create();\n        this.tmpMat4 = mat4.create();\n        this.vec3a = vec3.create();\n        this.vec3b = vec3.create();\n        this.vec3c = vec3.create();\n        this.vec3d = vec3.create();\n    }\n    CanvasRendererPlugin.prototype.apply = function (context, runtime) {\n        var _this = this;\n        this.context = context;\n        var config = context.config, camera = context.camera, renderingService = context.renderingService, renderingContext = context.renderingContext, rBushRoot = context.rBushRoot, \n        // @ts-ignore\n        pathGeneratorFactory = context.pathGeneratorFactory;\n        this.rBush = rBushRoot;\n        this.pathGeneratorFactory = pathGeneratorFactory;\n        var contextService = context.contextService;\n        var canvas = renderingContext.root.ownerDocument.defaultView;\n        var handleUnmounted = function (e) {\n            var object = e.target;\n            // remove r-bush node\n            // @ts-ignore\n            var rBushNode = object.rBushNode;\n            if (rBushNode.aabb) {\n                // save removed aabbs for dirty-rectangle rendering later\n                _this.removedRBushNodeAABBs.push(rBushNode.aabb);\n            }\n        };\n        var handleCulled = function (e) {\n            var object = e.target;\n            // @ts-ignore\n            var rBushNode = object.rBushNode;\n            if (rBushNode.aabb) {\n                // save removed aabbs for dirty-rectangle rendering later\n                _this.removedRBushNodeAABBs.push(rBushNode.aabb);\n            }\n        };\n        renderingService.hooks.init.tap(CanvasRendererPlugin.tag, function () {\n            canvas.addEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n            canvas.addEventListener(ElementEvent.CULLED, handleCulled);\n            // clear fullscreen\n            var dpr = contextService.getDPR();\n            var width = config.width, height = config.height;\n            var context = contextService.getContext();\n            _this.clearRect(context, 0, 0, width * dpr, height * dpr, config.background);\n        });\n        renderingService.hooks.destroy.tap(CanvasRendererPlugin.tag, function () {\n            canvas.removeEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n            canvas.removeEventListener(ElementEvent.CULLED, handleCulled);\n            _this.renderQueue = [];\n            _this.removedRBushNodeAABBs = [];\n            _this.restoreStack = [];\n        });\n        renderingService.hooks.beginFrame.tap(CanvasRendererPlugin.tag, function () {\n            var context = contextService.getContext();\n            var dpr = contextService.getDPR();\n            var width = config.width, height = config.height;\n            var _a = _this.canvasRendererPluginOptions, dirtyObjectNumThreshold = _a.dirtyObjectNumThreshold, dirtyObjectRatioThreshold = _a.dirtyObjectRatioThreshold;\n            // some heuristic conditions such as 80% object changed\n            var _b = renderingService.getStats(), total = _b.total, rendered = _b.rendered;\n            var ratio = rendered / total;\n            _this.clearFullScreen =\n                renderingService.disableDirtyRectangleRendering() ||\n                    (rendered > dirtyObjectNumThreshold &&\n                        ratio > dirtyObjectRatioThreshold);\n            if (context) {\n                context.resetTransform\n                    ? context.resetTransform()\n                    : context.setTransform(1, 0, 0, 1, 0, 0);\n                if (_this.clearFullScreen) {\n                    _this.clearRect(context, 0, 0, width * dpr, height * dpr, config.background);\n                }\n            }\n        });\n        var renderByZIndex = function (object, context) {\n            if (object.isVisible() && !object.isCulled()) {\n                _this.renderDisplayObject(object, context, _this.context, _this.restoreStack, runtime);\n                // if (object.renderable.) {\n                // if we did a full screen rendering last frame\n                _this.saveDirtyAABB(object);\n                // }\n            }\n            var sorted = object.sortable.sorted || object.childNodes;\n            // should account for z-index\n            sorted.forEach(function (child) {\n                renderByZIndex(child, context);\n            });\n        };\n        // render at the end of frame\n        renderingService.hooks.endFrame.tap(CanvasRendererPlugin.tag, function () {\n            var context = contextService.getContext();\n            // clear & clip dirty rectangle\n            var dpr = contextService.getDPR();\n            mat4.fromScaling(_this.dprMatrix, [dpr, dpr, 1]);\n            mat4.multiply(_this.vpMatrix, _this.dprMatrix, camera.getOrthoMatrix());\n            // if (this.clearFullScreen) {\n            if (_this.clearFullScreen) {\n                // console.log('canvas renderer fcp...');\n                renderByZIndex(renderingContext.root, context);\n            }\n            else {\n                // console.log('canvas renderer next...');\n                // merge removed AABB\n                var dirtyRenderBounds = _this.safeMergeAABB.apply(_this, __spreadArray([_this.mergeDirtyAABBs(_this.renderQueue)], __read(_this.removedRBushNodeAABBs.map(function (_a) {\n                    var minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n                    var aabb = new AABB();\n                    aabb.setMinMax(\n                    // vec3.fromValues(minX, minY, 0),\n                    // vec3.fromValues(maxX, maxY, 0),\n                    [minX, minY, 0], [maxX, maxY, 0]);\n                    return aabb;\n                })), false));\n                _this.removedRBushNodeAABBs = [];\n                if (AABB.isEmpty(dirtyRenderBounds)) {\n                    _this.renderQueue = [];\n                    return;\n                }\n                var dirtyRect = _this.convertAABB2Rect(dirtyRenderBounds);\n                var x = dirtyRect.x, y = dirtyRect.y, width = dirtyRect.width, height = dirtyRect.height;\n                var tl = vec3.transformMat4(_this.vec3a, [x, y, 0], _this.vpMatrix);\n                var tr = vec3.transformMat4(_this.vec3b, [x + width, y, 0], _this.vpMatrix);\n                var bl = vec3.transformMat4(_this.vec3c, [x, y + height, 0], _this.vpMatrix);\n                var br = vec3.transformMat4(_this.vec3d, [x + width, y + height, 0], _this.vpMatrix);\n                var minx = Math.min(tl[0], tr[0], br[0], bl[0]);\n                var miny = Math.min(tl[1], tr[1], br[1], bl[1]);\n                var maxx = Math.max(tl[0], tr[0], br[0], bl[0]);\n                var maxy = Math.max(tl[1], tr[1], br[1], bl[1]);\n                var ix = Math.floor(minx);\n                var iy = Math.floor(miny);\n                var iwidth = Math.ceil(maxx - minx);\n                var iheight = Math.ceil(maxy - miny);\n                context.save();\n                _this.clearRect(context, ix, iy, iwidth, iheight, config.background);\n                context.beginPath();\n                context.rect(ix, iy, iwidth, iheight);\n                context.clip();\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n                context.setTransform(_this.vpMatrix[0], _this.vpMatrix[1], _this.vpMatrix[4], _this.vpMatrix[5], _this.vpMatrix[12], _this.vpMatrix[13]);\n                // draw dirty rectangle\n                var enableDirtyRectangleRenderingDebug = config.renderer.getConfig().enableDirtyRectangleRenderingDebug;\n                if (enableDirtyRectangleRenderingDebug) {\n                    canvas.dispatchEvent(new CustomEvent(CanvasEvent.DIRTY_RECTANGLE, {\n                        dirtyRect: {\n                            x: ix,\n                            y: iy,\n                            width: iwidth,\n                            height: iheight,\n                        },\n                    }));\n                }\n                // search objects intersect with dirty rectangle\n                var dirtyObjects = _this.searchDirtyObjects(dirtyRenderBounds);\n                // do rendering\n                dirtyObjects\n                    // sort by z-index\n                    .sort(function (a, b) { return a.sortable.renderOrder - b.sortable.renderOrder; })\n                    .forEach(function (object) {\n                    // culled object should not be rendered\n                    if (object && object.isVisible() && !object.isCulled()) {\n                        _this.renderDisplayObject(object, context, _this.context, _this.restoreStack, runtime);\n                    }\n                });\n                context.restore();\n                // save dirty AABBs in last frame\n                _this.renderQueue.forEach(function (object) {\n                    _this.saveDirtyAABB(object);\n                });\n                // clear queue\n                _this.renderQueue = [];\n            }\n            // pop restore stack, eg. root -> parent -> child\n            _this.restoreStack.forEach(function () {\n                context.restore();\n            });\n            // clear restore stack\n            _this.restoreStack = [];\n        });\n        renderingService.hooks.render.tap(CanvasRendererPlugin.tag, function (object) {\n            if (!_this.clearFullScreen) {\n                // render at the end of frame\n                _this.renderQueue.push(object);\n            }\n        });\n    };\n    CanvasRendererPlugin.prototype.clearRect = function (context, x, y, width, height, background) {\n        // clearRect is faster than fillRect @see https://stackoverflow.com/a/30830253\n        context.clearRect(x, y, width, height);\n        if (background) {\n            context.fillStyle = background;\n            context.fillRect(x, y, width, height);\n        }\n    };\n    CanvasRendererPlugin.prototype.renderDisplayObject = function (object, context, canvasContext, restoreStack, runtime) {\n        var nodeName = object.nodeName;\n        // console.log('canvas render:', object);\n        // restore to its ancestor\n        var parent = restoreStack[restoreStack.length - 1];\n        if (parent &&\n            !(object.compareDocumentPosition(parent) & Node.DOCUMENT_POSITION_CONTAINS)) {\n            context.restore();\n            restoreStack.pop();\n        }\n        // @ts-ignore\n        var styleRenderer = this.context.styleRendererFactory[nodeName];\n        var generatePath = this.pathGeneratorFactory[nodeName];\n        // clip path\n        var clipPath = object.parsedStyle.clipPath;\n        if (clipPath) {\n            this.applyWorldTransform(context, clipPath);\n            // generate path in local space\n            var generatePath_1 = this.pathGeneratorFactory[clipPath.nodeName];\n            if (generatePath_1) {\n                context.save();\n                // save clip\n                restoreStack.push(object);\n                context.beginPath();\n                generatePath_1(context, clipPath.parsedStyle);\n                context.closePath();\n                context.clip();\n            }\n        }\n        // fill & stroke\n        if (styleRenderer) {\n            this.applyWorldTransform(context, object);\n            context.save();\n            // apply attributes to context\n            this.applyAttributesToContext(context, object);\n        }\n        if (generatePath) {\n            context.beginPath();\n            generatePath(context, object.parsedStyle);\n            if (object.nodeName !== Shape.LINE &&\n                object.nodeName !== Shape.PATH &&\n                object.nodeName !== Shape.POLYLINE) {\n                context.closePath();\n            }\n        }\n        // fill & stroke\n        if (styleRenderer) {\n            styleRenderer.render(context, object.parsedStyle, object, canvasContext, this, runtime);\n            // restore applied attributes, eg. shadowBlur shadowColor...\n            context.restore();\n        }\n        // finish rendering, clear dirty flag\n        object.renderable.dirty = false;\n    };\n    CanvasRendererPlugin.prototype.convertAABB2Rect = function (aabb) {\n        var min = aabb.getMin();\n        var max = aabb.getMax();\n        // expand the rectangle a bit to avoid artifacts\n        // @see https://www.yuque.com/antv/ou292n/bi8nix#ExvCu\n        var minX = Math.floor(min[0]);\n        var minY = Math.floor(min[1]);\n        var maxX = Math.ceil(max[0]);\n        var maxY = Math.ceil(max[1]);\n        var width = maxX - minX;\n        var height = maxY - minY;\n        return { x: minX, y: minY, width: width, height: height };\n    };\n    /**\n     * TODO: merge dirty rectangles with some strategies.\n     * For now, we just simply merge all the rectangles into one.\n     * @see https://idom.me/articles/841.html\n     */\n    CanvasRendererPlugin.prototype.mergeDirtyAABBs = function (dirtyObjects) {\n        // merge into a big AABB\n        // TODO: skip descendant if ancestor is caculated, but compareNodePosition is really slow\n        var aabb = new AABB();\n        dirtyObjects.forEach(function (object) {\n            var renderBounds = object.getRenderBounds();\n            aabb.add(renderBounds);\n            var dirtyRenderBounds = object.renderable.dirtyRenderBounds;\n            if (dirtyRenderBounds) {\n                aabb.add(dirtyRenderBounds);\n            }\n        });\n        return aabb;\n    };\n    CanvasRendererPlugin.prototype.searchDirtyObjects = function (dirtyRectangle) {\n        // search in r-tree, get all affected nodes\n        var _a = __read(dirtyRectangle.getMin(), 2), minX = _a[0], minY = _a[1];\n        var _b = __read(dirtyRectangle.getMax(), 2), maxX = _b[0], maxY = _b[1];\n        var rBushNodes = this.rBush.search({\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY,\n        });\n        return rBushNodes.map(function (_a) {\n            var displayObject = _a.displayObject;\n            return displayObject;\n        });\n    };\n    CanvasRendererPlugin.prototype.saveDirtyAABB = function (object) {\n        var renderable = object.renderable;\n        if (!renderable.dirtyRenderBounds) {\n            renderable.dirtyRenderBounds = new AABB();\n        }\n        var renderBounds = object.getRenderBounds();\n        if (renderBounds) {\n            // save last dirty aabb\n            renderable.dirtyRenderBounds.update(renderBounds.center, renderBounds.halfExtents);\n        }\n    };\n    /**\n     * TODO: batch the same global attributes\n     */\n    CanvasRendererPlugin.prototype.applyAttributesToContext = function (context, object) {\n        var _a = object.parsedStyle, stroke = _a.stroke, fill = _a.fill, opacity = _a.opacity, lineDash = _a.lineDash, lineDashOffset = _a.lineDashOffset;\n        // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setLineDash\n        if (lineDash) {\n            context.setLineDash(lineDash);\n        }\n        // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\n        if (!isNil(lineDashOffset)) {\n            context.lineDashOffset = lineDashOffset;\n        }\n        if (!isNil(opacity)) {\n            context.globalAlpha *= opacity;\n        }\n        if (!isNil(stroke) &&\n            !Array.isArray(stroke) &&\n            !stroke.isNone) {\n            context.strokeStyle = object.attributes.stroke;\n        }\n        if (!isNil(fill) && !Array.isArray(fill) && !fill.isNone) {\n            context.fillStyle = object.attributes.fill;\n        }\n    };\n    CanvasRendererPlugin.prototype.applyWorldTransform = function (context, object, matrix) {\n        var tx = 0;\n        var ty = 0;\n        var anchor = (object.parsedStyle || {}).anchor;\n        var anchorX = (anchor && anchor[0]) || 0;\n        var anchorY = (anchor && anchor[1]) || 0;\n        if (anchorX !== 0 || anchorY !== 0) {\n            // const bounds = object.getGeometryBounds();\n            var bounds = object.geometry.contentBounds;\n            var width = (bounds && bounds.halfExtents[0] * 2) || 0;\n            var height = (bounds && bounds.halfExtents[1] * 2) || 0;\n            tx = -(anchorX * width);\n            ty = -(anchorY * height);\n        }\n        // apply clip shape's RTS\n        if (matrix) {\n            mat4.copy(this.tmpMat4, object.getLocalTransform());\n            this.vec3a[0] = tx;\n            this.vec3a[1] = ty;\n            this.vec3a[2] = 0;\n            mat4.translate(this.tmpMat4, this.tmpMat4, this.vec3a);\n            mat4.multiply(this.tmpMat4, matrix, this.tmpMat4);\n            mat4.multiply(this.tmpMat4, this.vpMatrix, this.tmpMat4);\n        }\n        else {\n            // apply RTS transformation in world space\n            mat4.copy(this.tmpMat4, object.getWorldTransform());\n            this.vec3a[0] = tx;\n            this.vec3a[1] = ty;\n            this.vec3a[2] = 0;\n            mat4.translate(this.tmpMat4, this.tmpMat4, this.vec3a);\n            mat4.multiply(this.tmpMat4, this.vpMatrix, this.tmpMat4);\n        }\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n        context.setTransform(this.tmpMat4[0], this.tmpMat4[1], this.tmpMat4[4], this.tmpMat4[5], this.tmpMat4[12], this.tmpMat4[13]);\n    };\n    CanvasRendererPlugin.prototype.safeMergeAABB = function () {\n        var aabbs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            aabbs[_i] = arguments[_i];\n        }\n        var merged = new AABB();\n        aabbs.forEach(function (aabb) {\n            merged.add(aabb);\n        });\n        return merged;\n    };\n    CanvasRendererPlugin.tag = 'CanvasRenderer';\n    return CanvasRendererPlugin;\n}());\nexport { CanvasRendererPlugin };\n//# sourceMappingURL=CanvasRendererPlugin.js.map","import { __assign } from \"tslib\";\nimport { GradientType, isPattern, Shape } from '@antv/g-lite';\nimport { isNil } from '@antv/util';\nvar DefaultRenderer = /** @class */ (function () {\n    function DefaultRenderer(imagePool) {\n        this.imagePool = imagePool;\n    }\n    DefaultRenderer.prototype.render = function (context, parsedStyle, object, canvasContext, plugin, runtime) {\n        var fill = parsedStyle.fill, fillRule = parsedStyle.fillRule, opacity = parsedStyle.opacity, fillOpacity = parsedStyle.fillOpacity, stroke = parsedStyle.stroke, strokeOpacity = parsedStyle.strokeOpacity, lineWidth = parsedStyle.lineWidth, lineCap = parsedStyle.lineCap, lineJoin = parsedStyle.lineJoin, shadowType = parsedStyle.shadowType, shadowColor = parsedStyle.shadowColor, shadowBlur = parsedStyle.shadowBlur, filter = parsedStyle.filter, miterLimit = parsedStyle.miterLimit;\n        var hasFill = !isNil(fill) && !fill.isNone;\n        var hasStroke = !isNil(stroke) && !stroke.isNone && lineWidth > 0;\n        var isFillTransparent = fill.alpha === 0;\n        var hasFilter = !!(filter && filter.length);\n        var hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n        var nodeName = object.nodeName;\n        var isInnerShadow = shadowType === 'inner';\n        var shouldDrawShadowWithStroke = hasStroke &&\n            hasShadow &&\n            (nodeName === Shape.PATH ||\n                nodeName === Shape.LINE ||\n                nodeName === Shape.POLYLINE ||\n                isFillTransparent ||\n                isInnerShadow);\n        if (hasFill) {\n            context.globalAlpha = opacity * fillOpacity;\n            if (!shouldDrawShadowWithStroke) {\n                setShadowAndFilter(object, context, hasShadow);\n            }\n            this.fill(context, object, fill, fillRule, canvasContext, plugin, runtime);\n            if (!shouldDrawShadowWithStroke) {\n                this.clearShadowAndFilter(context, hasFilter, hasShadow);\n            }\n        }\n        if (hasStroke) {\n            context.globalAlpha = opacity * strokeOpacity;\n            context.lineWidth = lineWidth;\n            if (!isNil(miterLimit)) {\n                context.miterLimit = miterLimit;\n            }\n            if (!isNil(lineCap)) {\n                context.lineCap = lineCap;\n            }\n            if (!isNil(lineJoin)) {\n                context.lineJoin = lineJoin;\n            }\n            if (shouldDrawShadowWithStroke) {\n                if (isInnerShadow) {\n                    context.globalCompositeOperation = 'source-atop';\n                }\n                setShadowAndFilter(object, context, true);\n                if (isInnerShadow) {\n                    this.stroke(context, object, stroke, canvasContext, plugin, runtime);\n                    context.globalCompositeOperation = 'source-over';\n                    this.clearShadowAndFilter(context, hasFilter, true);\n                }\n            }\n            this.stroke(context, object, stroke, canvasContext, plugin, runtime);\n        }\n    };\n    DefaultRenderer.prototype.clearShadowAndFilter = function (context, hasFilter, hasShadow) {\n        if (hasShadow) {\n            context.shadowColor = 'transparent';\n            context.shadowBlur = 0;\n        }\n        if (hasFilter) {\n            // save drop-shadow filter\n            var oldFilter = context.filter;\n            if (!isNil(oldFilter) && oldFilter.indexOf('drop-shadow') > -1) {\n                context.filter =\n                    oldFilter.replace(/drop-shadow\\([^)]*\\)/, '').trim() || 'none';\n            }\n        }\n    };\n    DefaultRenderer.prototype.fill = function (context, object, fill, fillRule, canvasContext, plugin, runtime) {\n        var _this = this;\n        if (Array.isArray(fill)) {\n            fill.forEach(function (gradient) {\n                context.fillStyle = _this.getColor(gradient, object, context);\n                fillRule ? context.fill(fillRule) : context.fill();\n            });\n        }\n        else {\n            if (isPattern(fill)) {\n                context.fillStyle = this.getPattern(fill, object, context, canvasContext, plugin, runtime);\n            }\n            fillRule ? context.fill(fillRule) : context.fill();\n        }\n    };\n    DefaultRenderer.prototype.stroke = function (context, object, stroke, canvasContext, plugin, runtime) {\n        var _this = this;\n        if (Array.isArray(stroke)) {\n            stroke.forEach(function (gradient) {\n                context.strokeStyle = _this.getColor(gradient, object, context);\n                context.stroke();\n            });\n        }\n        else {\n            if (isPattern(stroke)) {\n                context.strokeStyle = this.getPattern(stroke, object, context, canvasContext, plugin, runtime);\n            }\n            context.stroke();\n        }\n    };\n    DefaultRenderer.prototype.getPattern = function (pattern, object, context, canvasContext, plugin, runtime) {\n        var $offscreenCanvas;\n        var dpr;\n        if (pattern.image.nodeName === 'rect') {\n            var _a = pattern.image.parsedStyle, width = _a.width, height = _a.height;\n            dpr = canvasContext.contextService.getDPR();\n            var offscreenCanvas = canvasContext.config.offscreenCanvas;\n            $offscreenCanvas = runtime.offscreenCanvasCreator.getOrCreateCanvas(offscreenCanvas);\n            $offscreenCanvas.width = width * dpr;\n            $offscreenCanvas.height = height * dpr;\n            var offscreenCanvasContext_1 = runtime.offscreenCanvasCreator.getOrCreateContext(offscreenCanvas);\n            var restoreStack_1 = [];\n            // offscreenCanvasContext.scale(1 / dpr, 1 / dpr);\n            pattern.image.forEach(function (object) {\n                plugin.renderDisplayObject(object, offscreenCanvasContext_1, canvasContext, restoreStack_1, runtime);\n            });\n            restoreStack_1.forEach(function () {\n                offscreenCanvasContext_1.restore();\n            });\n        }\n        var canvasPattern = this.imagePool.getOrCreatePatternSync(pattern, context, $offscreenCanvas, dpr, function () {\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            canvasContext.renderingService.dirtify();\n        });\n        return canvasPattern;\n    };\n    DefaultRenderer.prototype.getColor = function (parsedColor, object, context) {\n        var color;\n        if (parsedColor.type === GradientType.LinearGradient ||\n            parsedColor.type === GradientType.RadialGradient) {\n            var bounds = object.getGeometryBounds();\n            var width = (bounds && bounds.halfExtents[0] * 2) || 1;\n            var height = (bounds && bounds.halfExtents[1] * 2) || 1;\n            color = this.imagePool.getOrCreateGradient(__assign(__assign({ type: parsedColor.type }, parsedColor.value), { width: width, height: height }), context);\n        }\n        return color;\n    };\n    return DefaultRenderer;\n}());\nexport { DefaultRenderer };\n/**\n * apply before fill and stroke but only once\n */\nexport function setShadowAndFilter(object, context, hasShadow) {\n    var _a = object.parsedStyle, filter = _a.filter, shadowColor = _a.shadowColor, shadowBlur = _a.shadowBlur, shadowOffsetX = _a.shadowOffsetX, shadowOffsetY = _a.shadowOffsetY;\n    if (filter && filter.length) {\n        // use raw filter string\n        context.filter = object.style.filter;\n    }\n    if (hasShadow) {\n        context.shadowColor = shadowColor.toString();\n        context.shadowBlur = shadowBlur || 0;\n        context.shadowOffsetX = shadowOffsetX || 0;\n        context.shadowOffsetY = shadowOffsetY || 0;\n    }\n}\n//# sourceMappingURL=Default.js.map","import { isNil, isString } from '@antv/util';\nimport { setShadowAndFilter } from './Default';\nvar ImageRenderer = /** @class */ (function () {\n    function ImageRenderer(imagePool) {\n        this.imagePool = imagePool;\n    }\n    ImageRenderer.prototype.render = function (context, parsedStyle, object) {\n        var width = parsedStyle.width, height = parsedStyle.height, img = parsedStyle.img, shadowColor = parsedStyle.shadowColor, shadowBlur = parsedStyle.shadowBlur;\n        var image;\n        var iw = width;\n        var ih = height;\n        if (isString(img)) {\n            // image has been loaded in `mounted` hook\n            image = this.imagePool.getImageSync(img);\n        }\n        else {\n            iw || (iw = img.width);\n            ih || (ih = img.height);\n            image = img;\n        }\n        if (image) {\n            var hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n            setShadowAndFilter(object, context, hasShadow);\n            // node-canvas will throw the following err:\n            // Error: Image given has not completed loading\n            try {\n                context.drawImage(image, 0, 0, iw, ih);\n            }\n            catch (e) { }\n        }\n    };\n    return ImageRenderer;\n}());\nexport { ImageRenderer };\n//# sourceMappingURL=Image.js.map","import isType from './is-type';\nexport default (function (str) {\n    return isType(str, 'String');\n});\n//# sourceMappingURL=is-string.js.map","import { isNil } from '@antv/util';\nimport { setShadowAndFilter } from './Default';\nvar TextRenderer = /** @class */ (function () {\n    function TextRenderer() {\n    }\n    TextRenderer.prototype.render = function (context, parsedStyle, object, canvasContext, plugin, runtime) {\n        var _a = parsedStyle, lineWidth = _a.lineWidth, textAlign = _a.textAlign, textBaseline = _a.textBaseline, lineJoin = _a.lineJoin, miterLimit = _a.miterLimit, letterSpacing = _a.letterSpacing, stroke = _a.stroke, fill = _a.fill, fillOpacity = _a.fillOpacity, strokeOpacity = _a.strokeOpacity, opacity = _a.opacity, metrics = _a.metrics, dx = _a.dx, dy = _a.dy, shadowColor = _a.shadowColor, shadowBlur = _a.shadowBlur;\n        var font = metrics.font, lines = metrics.lines, height = metrics.height, lineHeight = metrics.lineHeight, lineMetrics = metrics.lineMetrics;\n        context.font = font;\n        context.lineWidth = lineWidth;\n        context.textAlign = textAlign === 'middle' ? 'center' : textAlign;\n        var formattedTextBaseline = textBaseline;\n        if (\n        // formattedTextBaseline === 'bottom' ||\n        !runtime.enableCSSParsing &&\n            formattedTextBaseline === 'alphabetic') {\n            formattedTextBaseline = 'bottom';\n        }\n        context.lineJoin = lineJoin;\n        if (!isNil(miterLimit)) {\n            context.miterLimit = miterLimit;\n        }\n        var linePositionY = 0;\n        // handle vertical text baseline\n        if (textBaseline === 'middle') {\n            linePositionY = -height / 2 - lineHeight / 2;\n        }\n        else if (textBaseline === 'bottom' ||\n            textBaseline === 'alphabetic' ||\n            textBaseline === 'ideographic') {\n            linePositionY = -height;\n        }\n        else if (textBaseline === 'top' || textBaseline === 'hanging') {\n            linePositionY = -lineHeight;\n        }\n        // account for dx & dy\n        var offsetX = dx || 0;\n        linePositionY += dy || 0;\n        if (lines.length === 1) {\n            if (formattedTextBaseline === 'bottom') {\n                formattedTextBaseline = 'middle';\n                linePositionY -= 0.5 * height;\n            }\n            else if (formattedTextBaseline === 'top') {\n                formattedTextBaseline = 'middle';\n                linePositionY += 0.5 * height;\n            }\n        }\n        context.textBaseline = formattedTextBaseline;\n        var hasShadow = !isNil(shadowColor) && shadowBlur > 0;\n        setShadowAndFilter(object, context, hasShadow);\n        // draw lines line by line\n        for (var i = 0; i < lines.length; i++) {\n            var linePositionX = lineWidth / 2 + offsetX;\n            linePositionY += lineHeight;\n            // no need to re-position X, cause we already set text align\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign\n            if (!isNil(stroke) && !stroke.isNone && lineWidth) {\n                this.drawLetterSpacing(context, lines[i], lineMetrics[i], textAlign, linePositionX, linePositionY, letterSpacing, fillOpacity, strokeOpacity, opacity, true);\n            }\n            if (!isNil(fill)) {\n                this.drawLetterSpacing(context, lines[i], lineMetrics[i], textAlign, linePositionX, linePositionY, letterSpacing, fillOpacity, strokeOpacity, opacity);\n            }\n        }\n    };\n    TextRenderer.prototype.drawLetterSpacing = function (context, text, lineMetrics, textAlign, x, y, letterSpacing, fillOpacity, strokeOpacity, opacity, isStroke) {\n        if (isStroke === void 0) { isStroke = false; }\n        // letterSpacing of 0 means normal, render all texts directly\n        if (letterSpacing === 0) {\n            if (isStroke) {\n                this.strokeText(context, text, x, y, strokeOpacity);\n            }\n            else {\n                this.fillText(context, text, x, y, fillOpacity, opacity);\n            }\n            return;\n        }\n        // draw text using left align\n        var currentTextAlign = context.textAlign;\n        context.textAlign = 'left';\n        var currentPosition = x;\n        if (textAlign === 'center' || textAlign === 'middle') {\n            currentPosition = x - lineMetrics.width / 2;\n        }\n        else if (textAlign === 'right' || textAlign === 'end') {\n            currentPosition = x - lineMetrics.width;\n        }\n        var stringArray = Array.from(text);\n        var previousWidth = context.measureText(text).width;\n        var currentWidth = 0;\n        for (var i = 0; i < stringArray.length; ++i) {\n            var currentChar = stringArray[i];\n            if (isStroke) {\n                this.strokeText(context, currentChar, currentPosition, y, strokeOpacity);\n            }\n            else {\n                this.fillText(context, currentChar, currentPosition, y, fillOpacity, opacity);\n            }\n            currentWidth = context.measureText(text.substring(i + 1)).width;\n            currentPosition += previousWidth - currentWidth + letterSpacing;\n            previousWidth = currentWidth;\n        }\n        context.textAlign = currentTextAlign;\n    };\n    TextRenderer.prototype.fillText = function (context, text, x, y, fillOpacity, opacity) {\n        var currentGlobalAlpha;\n        var applyOpacity = !isNil(fillOpacity) && fillOpacity !== 1;\n        if (applyOpacity) {\n            currentGlobalAlpha = context.globalAlpha;\n            context.globalAlpha = fillOpacity * opacity;\n        }\n        context.fillText(text, x, y);\n        if (applyOpacity) {\n            context.globalAlpha = currentGlobalAlpha;\n        }\n    };\n    TextRenderer.prototype.strokeText = function (context, text, x, y, strokeOpacity) {\n        var currentGlobalAlpha;\n        var applyOpacity = !isNil(strokeOpacity) && strokeOpacity !== 1;\n        if (applyOpacity) {\n            currentGlobalAlpha = context.globalAlpha;\n            context.globalAlpha = strokeOpacity;\n        }\n        context.strokeText(text, x, y);\n        if (applyOpacity) {\n            context.globalAlpha = currentGlobalAlpha;\n        }\n    };\n    return TextRenderer;\n}());\nexport { TextRenderer };\n//# sourceMappingURL=Text.js.map","import { __extends } from \"tslib\";\nimport { DefaultRenderer } from './Default';\nvar RectRenderer = /** @class */ (function (_super) {\n    __extends(RectRenderer, _super);\n    function RectRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RectRenderer;\n}(DefaultRenderer));\nexport { RectRenderer };\n//# sourceMappingURL=Rect.js.map","import { __extends } from \"tslib\";\nimport { DefaultRenderer } from './Default';\nvar CircleRenderer = /** @class */ (function (_super) {\n    __extends(CircleRenderer, _super);\n    function CircleRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CircleRenderer;\n}(DefaultRenderer));\nexport { CircleRenderer };\n//# sourceMappingURL=Circle.js.map","import { __extends } from \"tslib\";\nimport { DefaultRenderer } from './Default';\nvar EllipseRenderer = /** @class */ (function (_super) {\n    __extends(EllipseRenderer, _super);\n    function EllipseRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EllipseRenderer;\n}(DefaultRenderer));\nexport { EllipseRenderer };\n//# sourceMappingURL=Ellipse.js.map","import { __extends } from \"tslib\";\nimport { DefaultRenderer } from './Default';\nvar LineRenderer = /** @class */ (function (_super) {\n    __extends(LineRenderer, _super);\n    function LineRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return LineRenderer;\n}(DefaultRenderer));\nexport { LineRenderer };\n//# sourceMappingURL=Line.js.map","import { __extends } from \"tslib\";\nimport { DefaultRenderer } from './Default';\nvar PolylineRenderer = /** @class */ (function (_super) {\n    __extends(PolylineRenderer, _super);\n    function PolylineRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PolylineRenderer;\n}(DefaultRenderer));\nexport { PolylineRenderer };\n//# sourceMappingURL=Polyline.js.map","import { __extends } from \"tslib\";\nimport { DefaultRenderer } from './Default';\nvar PolygonRenderer = /** @class */ (function (_super) {\n    __extends(PolygonRenderer, _super);\n    function PolygonRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PolygonRenderer;\n}(DefaultRenderer));\nexport { PolygonRenderer };\n//# sourceMappingURL=Polygon.js.map","import { __extends } from \"tslib\";\nimport { DefaultRenderer } from './Default';\nvar PathRenderer = /** @class */ (function (_super) {\n    __extends(PathRenderer, _super);\n    function PathRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PathRenderer;\n}(DefaultRenderer));\nexport { PathRenderer };\n//# sourceMappingURL=Path.js.map","import { __assign, __extends } from \"tslib\";\nimport { AbstractRendererPlugin, Shape } from '@antv/g-lite';\nimport { CanvasRendererPlugin } from './CanvasRendererPlugin';\nimport { DefaultRenderer } from './shapes/styles/Default';\nimport { ImageRenderer } from './shapes/styles/Image';\nimport { TextRenderer } from './shapes/styles/Text';\nexport * from './shapes/styles';\nvar Plugin = /** @class */ (function (_super) {\n    __extends(Plugin, _super);\n    function Plugin(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.options = options;\n        _this.name = 'canvas-renderer';\n        return _this;\n    }\n    Plugin.prototype.init = function () {\n        var _a;\n        var canvasRendererPluginOptions = __assign({ dirtyObjectNumThreshold: 500, dirtyObjectRatioThreshold: 0.8 }, this.options);\n        // @ts-ignore\n        var imagePool = this.context.imagePool;\n        var defaultRenderer = new DefaultRenderer(imagePool);\n        var defaultStyleRendererFactory = (_a = {},\n            _a[Shape.CIRCLE] = defaultRenderer,\n            _a[Shape.ELLIPSE] = defaultRenderer,\n            _a[Shape.RECT] = defaultRenderer,\n            _a[Shape.IMAGE] = new ImageRenderer(imagePool),\n            _a[Shape.TEXT] = new TextRenderer(),\n            _a[Shape.LINE] = defaultRenderer,\n            _a[Shape.POLYLINE] = defaultRenderer,\n            _a[Shape.POLYGON] = defaultRenderer,\n            _a[Shape.PATH] = defaultRenderer,\n            _a[Shape.GROUP] = undefined,\n            _a[Shape.HTML] = undefined,\n            _a[Shape.MESH] = undefined,\n            _a);\n        this.context.defaultStyleRendererFactory = defaultStyleRendererFactory;\n        this.context.styleRendererFactory = defaultStyleRendererFactory;\n        this.addRenderingPlugin(new CanvasRendererPlugin(canvasRendererPluginOptions));\n    };\n    Plugin.prototype.destroy = function () {\n        this.removeAllRenderingPlugins();\n        delete this.context.defaultStyleRendererFactory;\n        delete this.context.styleRendererFactory;\n    };\n    return Plugin;\n}(AbstractRendererPlugin));\nexport { Plugin };\n//# sourceMappingURL=index.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","ARRAY_TYPE","Float32Array","out","glMatrix.ARRAY_TYPE","copy","a","multiply","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","translate","v","x","y","z","transformMat4","w","Math","hypot","sqrt","isNil$1","toString","isType$1","type","CanvasRendererPlugin","canvasRendererPluginOptions","removedRBushNodeAABBs","renderQueue","restoreStack","clearFullScreen","vpMatrix","mat4.create","dprMatrix","tmpMat4","vec3a","vec3.create","vec3b","vec3c","vec3d","context","runtime","_this","config","camera","renderingService","renderingContext","pathGeneratorFactory","rBush","rBushRoot","contextService","canvas","root","ownerDocument","defaultView","handleUnmounted","rBushNode","target","aabb","handleCulled","hooks","init","tap","tag","addEventListener","ElementEvent","UNMOUNTED","CULLED","dpr","getDPR","width","height","getContext","clearRect","background","destroy","removeEventListener","beginFrame","_a","dirtyObjectNumThreshold","dirtyObjectRatioThreshold","_b","getStats","rendered","ratio","total","disableDirtyRectangleRendering","resetTransform","setTransform","renderByZIndex","object","isVisible","isCulled","renderDisplayObject","saveDirtyAABB","sortable","sorted","childNodes","forEach","child","endFrame","mat4.multiply","getOrthoMatrix","dirtyRenderBounds","safeMergeAABB","to","from","pack","l","slice","concat","__spreadArray","mergeDirtyAABBs","map","minX","minY","maxX","maxY","AABB","setMinMax","isEmpty","dirtyRect","convertAABB2Rect","tl","vec3.transformMat4","tr","bl","br","minx","min","miny","maxx","max","maxy","ix","floor","iy","iwidth","ceil","iheight","save","beginPath","rect","clip","renderer","getConfig","enableDirtyRectangleRenderingDebug","dispatchEvent","CustomEvent","CanvasEvent","DIRTY_RECTANGLE","searchDirtyObjects","sort","renderOrder","restore","render","fillStyle","fillRect","canvasContext","nodeName","parent","compareDocumentPosition","Node","DOCUMENT_POSITION_CONTAINS","pop","styleRenderer","styleRendererFactory","generatePath","clipPath","parsedStyle","applyWorldTransform","generatePath_1","closePath","applyAttributesToContext","Shape","LINE","PATH","POLYLINE","renderable","dirty","getMin","getMax","dirtyObjects","renderBounds","getRenderBounds","add","dirtyRectangle","search","displayObject","update","center","halfExtents","stroke","fill","opacity","lineDash","lineDashOffset","setLineDash","isNil","globalAlpha","isArray","isNone","strokeStyle","attributes","matrix","tx","ty","anchor","anchorX","anchorY","bounds","geometry","contentBounds","mat4.copy","getLocalTransform","mat4.translate","getWorldTransform","aabbs","_i","merged","DefaultRenderer","imagePool","plugin","fillRule","fillOpacity","strokeOpacity","lineWidth","lineCap","lineJoin","shadowType","shadowColor","shadowBlur","filter","miterLimit","hasFill","hasStroke","isFillTransparent","alpha","hasFilter","hasShadow","isInnerShadow","shouldDrawShadowWithStroke","setShadowAndFilter","clearShadowAndFilter","globalCompositeOperation","oldFilter","indexOf","replace","trim","gradient","getColor","isPattern","getPattern","pattern","$offscreenCanvas","image","offscreenCanvas","offscreenCanvasCreator","getOrCreateCanvas","offscreenCanvasContext_1","getOrCreateContext","restoreStack_1","getOrCreatePatternSync","dirtify","parsedColor","color","GradientType","LinearGradient","RadialGradient","getGeometryBounds","getOrCreateGradient","shadowOffsetX","shadowOffsetY","style","ImageRenderer","img","iw","ih","isType","getImageSync","drawImage","TextRenderer","textAlign","textBaseline","letterSpacing","metrics","dx","dy","lines","lineHeight","lineMetrics","font","formattedTextBaseline","enableCSSParsing","linePositionY","offsetX","linePositionX","drawLetterSpacing","text","isStroke","currentTextAlign","currentPosition","stringArray","previousWidth","measureText","currentWidth","currentChar","strokeText","fillText","substring","currentGlobalAlpha","applyOpacity","RectRenderer","_super","CircleRenderer","EllipseRenderer","LineRenderer","PolylineRenderer","PolygonRenderer","PathRenderer","Plugin","options","name","defaultRenderer","defaultStyleRendererFactory","CIRCLE","ELLIPSE","RECT","IMAGE","TEXT","POLYGON","GROUP","undefined","HTML","MESH","addRenderingPlugin","removeAllRenderingPlugins","AbstractRendererPlugin"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,9]}